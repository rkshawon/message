{"version":3,"sources":["Chat.js","App.js","index.js"],"names":["Chat","socket","room","name","useState","message","setMessage","messageArray","setmessageArray","sendMessage","a","messageInfo","time","Date","now","getHours","getMinutes","emit","mgs","useEffect","on","messageIn","console","log","className","map","id","type","placeholder","value","onChange","event","target","onKeyPress","key","onClick","io","connect","App","text","setText","setRoom","showChat","setshowChat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSA0DeA,MAtDf,YAAqC,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,KAAMC,EAAO,EAAPA,KACzB,EAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EAAW,uCAAG,4BAAAC,EAAA,yDACD,KAAZL,EADa,uBAEVM,EAAc,CAChBN,QAASA,EACTH,KAAMA,EACNC,KAAMA,EACNS,KAAM,IAAIC,KAAKA,KAAKC,OAAOC,WAAc,IAAM,IAAIF,KAAKA,KAAKC,OAAOE,cANxD,SAQVf,EAAOgB,KAAK,eAAgBN,GARlB,OAShBH,GAAgB,SAACU,GAAD,4BAAWA,GAAX,CAAgBP,OAThB,OAWhBL,EAAW,IAXK,2CAAH,qDAmBjB,OANAa,qBAAU,WACPlB,EAAOmB,GAAG,mBAAmB,SAACC,GACzBC,QAAQC,IAAI,WAAWF,GACvBb,GAAgB,SAACU,GAAD,4BAAWA,GAAX,CAAgBG,YAErC,CAACpB,IAEA,sBAAKuB,UAAU,cAAf,UACI,qBAAKA,UAAU,cAAf,SAA6B,4CAC7B,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CAAiBA,UAAU,oBAA3B,SACKjB,EAAakB,KAAI,SAACP,GACf,OACA,qBAAKM,UAAU,UAAUE,GAAIvB,IAASe,EAAIf,KAAO,MAAQ,QAAzD,SACI,gCACI,qBAAKqB,UAAU,kBAAf,SACI,4BAAwBN,EAAIb,SAAnBa,EAAIb,WAEjB,sBAAKmB,UAAU,eAAf,UACI,mBAAGE,GAAG,OAAN,SAAcR,EAAIN,OAClB,mBAAGc,GAAG,SAAN,SAAgBR,EAAIf,sBAS5C,sBAAKqB,UAAU,cAAf,UACA,uBAAOG,KAAO,OAAOC,YAAc,eAAeC,MAASxB,EAASyB,SAAY,SAACC,GAASzB,EAAWyB,EAAMC,OAAOH,QAAUI,WAAY,SAACF,GAA0B,UAAdA,EAAMG,KAAiBzB,OAC5K,wBAAQ0B,QAAS1B,EAAjB,2BC/CNR,EAASmC,IAAGC,QAAQ,yBA8BXC,MA5Bf,WACE,MAAyBlC,mBAAS,IAAlC,mBAAOmC,EAAP,KAAcC,EAAd,KACA,EAAwBpC,mBAAS,IAAjC,mBAAOF,EAAP,KAAauC,EAAb,KACA,EAAgCrC,oBAAS,GAAzC,mBAAOsC,EAAP,KAAiBC,EAAjB,KASA,OACE,qBAAKnB,UAAU,MAAf,SACEkB,EAQA,cAAC,EAAD,CAAMzC,OAAUA,EAAQC,KAAQA,EAAMC,KAAQoC,IAP9C,sBAAKf,UAAU,oBAAf,UACE,4CACA,uBAAOG,KAAO,OAAOC,YAAc,aAAaE,SAAY,SAACC,GAASS,EAAQT,EAAMC,OAAOH,UAC3F,uBAAOF,KAAO,OAAOC,YAAc,kBAAkBE,SAAY,SAACC,GAASU,EAAQV,EAAMC,OAAOH,UAChG,wBAAQM,QAdG,WACH,KAATI,GAAyB,KAATrC,IACjBD,EAAOgB,KAAK,YAAaf,GACzBoB,QAAQC,IAAI,kBACZoB,GAAY,KAUV,+BCrBRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c04d54c7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport ScroolToBottom from \"react-scroll-to-bottom\"\r\nimport './App.css'\r\n\r\nfunction Chat({socket, room, name}) {\r\n    const [message , setMessage] = useState(\"\")\r\n    const [messageArray, setmessageArray] = useState([])\r\n\r\n    const sendMessage = async ()=>{\r\n        if(message !== \"\"){\r\n        const messageInfo = {\r\n            message: message,\r\n            room: room,\r\n            name: name,\r\n            time: new Date(Date.now()).getHours() +  \":\" + new Date(Date.now()).getMinutes(),  \r\n            }\r\n        await socket.emit(\"send_message\", messageInfo)\r\n        setmessageArray((mgs)=>[...mgs, messageInfo])\r\n        }\r\n        setMessage(\"\")\r\n    }\r\n    useEffect(() => {\r\n       socket.on(\"recieve_message\", (messageIn)=>{\r\n            console.log(\"Message \",messageIn)\r\n            setmessageArray((mgs)=>[...mgs, messageIn])\r\n       })\r\n    }, [socket])\r\n    return (\r\n        <div className='chat-window'>\r\n            <div className='chat-header'><p>Live Chat</p></div>\r\n            <div className='chat-body'>\r\n                <ScroolToBottom  className=\"message-container\">\r\n                    {messageArray.map((mgs)=>{\r\n                        return(\r\n                        <div className=\"message\" id={name === mgs.name ? \"you\" : \"other\"}>\r\n                            <div>\r\n                                <div className=\"message-content\">\r\n                                    <p key={ mgs.message }>{mgs.message}</p>\r\n                                </div>\r\n                                <div className=\"message-meta\">\r\n                                    <p id=\"time\">{mgs.time}</p>\r\n                                    <p id=\"author\">{mgs.name}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        )\r\n                    })}\r\n                </ScroolToBottom>\r\n            </div>\r\n            \r\n            <div className='chat-footer'>\r\n            <input type = \"text\" placeholder = \"Type here...\" value = {message} onChange = {(event)=>{setMessage(event.target.value)}}  onKeyPress={(event)=>{if(event.key === \"Enter\"){sendMessage()}}} />\r\n            <button onClick={sendMessage}>&#9658;</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import './App.css';\nimport {useState} from \"react\"\nimport io from \"socket.io-client\"\nimport Chat from './Chat';\n\nconst socket = io.connect(\"http://localhost:3001\")\n\nfunction App() {\n  const [text , setText] = useState(\"\")\n  const [room, setRoom] = useState(\"\")\n  const [showChat, setshowChat] = useState(false)\n\n  const joinRoom = ()=>{\n    if(text !== \"\"  && room !== \"\"){\n      socket.emit(\"join_room\", room)\n      console.log(\"button clicked\")\n      setshowChat(true)\n    }\n  }\n  return (\n    <div className=\"App\">\n    {!showChat ? \n      <div className=\"joinChatContainer\">\n        <h3>Start Chat</h3>\n        <input type = \"text\" placeholder = \"Enter Name\" onChange = {(event)=>{setText(event.target.value)}}/>\n        <input type = \"text\" placeholder = \"Enter Room Name\" onChange = {(event)=>{setRoom(event.target.value)}}/>\n        <button onClick={joinRoom}>Create Room</button>\n      </div>\n      :\n      <Chat socket = {socket} room = {room} name = {text} />\n    }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}